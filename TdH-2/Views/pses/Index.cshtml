@using PagedList;
@using PagedList.Mvc;
@using TdH.Utils
@using TdH_2.Models;
@model TdH_2.ViewsModels.PseViewBag
@{
    ViewBag.Title = "Index";
}
<h3>
    <strong>LISTE DES RAPPORTS<span class="color"> PSE </span></strong><br />
</h3>

@if (@TempData["message"] != null)
{
    <div class="alert alert-@TempData["css"] alert-dismissible" role="alert">
        <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        @TempData["message"]
    </div>
}
<table class="table table-responsive table-hover table-condensed">
    <thead>
    <th>
        @Html.DisplayNameFor(model => model.Pse[0].lieu_incident)
    </th>
    <th>
        @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.Pse[0].zone).ToString()), "Index", new { sortOrder = Model.SortParams("zone") })
    </th>
    <th>
        @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.Pse[0].pays).ToString()), "Index", new { sortOrder = Model.SortParams("pays") })
    </th>
    <th>
        @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.Pse[0].gravite_incident).ToString()), "Index", new { sortOrder = Model.SortParams("gravite_incident") })
    </th>
    <th>
        @Html.ActionLink(HttpUtility.HtmlDecode(Html.DisplayNameFor(model => model.Pse[0].responsabilite_tdh).ToString()), "Index", new { sortOrder = Model.SortParams("responsabilite_tdh") })
    </th>
    <th>
        @Html.DisplayNameFor(model => model.Pse[0].resume_incident)
    </th>

    <th></th>
    </thead>
    @using (Html.BeginForm())
    {
        <thead>
            <tr>
                <td>
                    @Html.EditorFor(model => model.LikeSearch["lieu_incident"], new { htmlAttributes = new { @class = "form-control", @Value = Model.LikeSearch["lieu_incident"] } })
                </td>
                <td>
                    @Html.DropDownListFor(n => n.LikeSearch["zone"], Model.Pse[0].listZones, new { @class = "form-control" })
                </td>
                <td>
                    @Html.DropDownListFor(n => n.LikeSearch["pays"], Model.Pse[0].listPays, new { @class = "form-control" })
                </td>
                <td>
                    @Html.DropDownListFor(n => n.LikeSearch["gravite_incident"], Model.Pse[0].listGraviteIncidents, new { @class = "form-control" })
                </td>
                <td>
                    -
                </td>
                <td>
                    @Html.EditorFor(model => model.LikeSearch["resume_incident"], new { htmlAttributes = new { @class = "form-control", @Value = Model.LikeSearch["resume_incident"] } })
                </td>
                <td colspan="2">
                    <input type="submit" value="Rechercher" class="btn btn-default" />
                </td>
            </tr>
        </thead>
    }


    @foreach (var item in Model.Pse)
    {
        <tbody>
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.lieu_incident)
                </td>
                <td>
                    @TranslateManager.getTranslateFor(item.listZones, item.zone)
                </td>
                <td>
                    @TranslateManager.getTranslateFor(item.listPays, item.pays)
                </td>
                <td>
                    @TranslateManager.getTranslateFor(item.listGraviteIncidents, item.gravite_incident)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.responsabilite_tdh)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.resume_incident)
                </td>
                <td>
                    @Html.ActionLink(" ", "Edit", new { id = item.ID }, new { @class = "fa fa-pencil-square-o fa-2x" })
                </td>
                <td>
                    @Html.ActionLink(" ", "Delete", new { id = item.ID }, new { @class = "fa fa-times fa-2x" })
                </td>
            </tr>
        </tbody>
    }

</table>
<br />

Page @(ViewBag.pagination.PageCount < ViewBag.pagination.PageNumber ? 0 : ViewBag.pagination.PageNumber) of @ViewBag.pagination.PageCount

@Html.PagedListPager((IPagedList<pse>)ViewBag.pagination, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))